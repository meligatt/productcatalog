[{"/app/src/index.tsx":"1","/app/src/serviceWorker.ts":"2","/app/src/pages/HomePage/HomePage.tsx":"3","/app/src/environment.js":"4","/app/src/components/CategoryGrid/CategoryGrid.tsx":"5","/app/src/components/CategoryList/CategoryList.tsx":"6","/app/src/pages/HomePage/HomePageContext.ts":"7","/app/src/theme.ts":"8","/app/src/pages/HomePage/__generated__/HomePageQuery.graphql.ts":"9","/app/src/pages/ScrollToTop.tsx":"10","/app/src/pages/HomePage/certificationLinks.tsx":"11","/app/src/pages/HomePage/components/Main.tsx":"12","/app/src/pages/HomePage/components/Footer.tsx":"13","/app/src/pages/CartPage/CartPage.tsx":"14","/app/src/pages/SearchResultsPage/SearchResultsPage.tsx":"15","/app/src/pages/QuotePage/QuotePage.tsx":"16","/app/src/pages/SingleProductPage/SingleProductPage.tsx":"17","/app/src/pages/ProductsPage/ProductsPage.tsx":"18","/app/src/components/Nav/Nav.tsx":"19","/app/src/components/ContactForm/ContactForm.tsx":"20","/app/src/components/Loader/Loader.tsx":"21","/app/src/components/ContentList/ContentList.tsx":"22","/app/src/pages/SingleProductPage/__generated__/SingleProductPageQuery.graphql.ts":"23","/app/src/pages/ProductsPage/__generated__/ProductsPageQuery.graphql.ts":"24","/app/src/pages/SearchResultsPage/__generated__/SearchResultsPageQuery.graphql.ts":"25","/app/src/components/ContactForm/__generated__/ContactFormQuery.graphql.ts":"26","/app/src/components/ProductList/ProductList.tsx":"27","/app/src/components/QuoteForm/QuoteForm.tsx":"28","/app/src/components/CartTable/CartTable.tsx":"29","/app/src/components/ProductCard/ProductCard.tsx":"30","/app/src/components/ReCaptcha/ReCaptcha.tsx":"31","/app/src/components/ProductList/__generated__/ProductList_products.graphql.ts":"32","/app/src/components/QuoteForm/__generated__/QuoteFormQuery.graphql.ts":"33","/app/src/components/QuantityPicker/QuantityPicker.tsx":"34","/app/src/components/CategoryList/__generated__/CategoryList_categories.graphql.ts":"35","/app/src/components/CategoryGrid/__generated__/CategoryGrid_categoryGridItems.graphql.ts":"36"},{"size":622,"mtime":1611899971237,"results":"37","hashOfConfig":"38"},{"size":5290,"mtime":1612141373782,"results":"39","hashOfConfig":"38"},{"size":7560,"mtime":1612160485482,"results":"40","hashOfConfig":"38"},{"size":548,"mtime":1612493481098,"results":"41","hashOfConfig":"38"},{"size":2420,"mtime":1611905393944,"results":"42","hashOfConfig":"38"},{"size":2241,"mtime":1611905393947,"results":"43","hashOfConfig":"38"},{"size":1022,"mtime":1595082812377,"results":"44","hashOfConfig":"38"},{"size":3194,"mtime":1611015018919,"results":"45","hashOfConfig":"38"},{"size":3655,"mtime":1596883568441,"results":"46","hashOfConfig":"38"},{"size":284,"mtime":1595588858934,"results":"47","hashOfConfig":"38"},{"size":1986,"mtime":1611802113422,"results":"48","hashOfConfig":"38"},{"size":504,"mtime":1611802113426,"results":"49","hashOfConfig":"38"},{"size":4147,"mtime":1612150619594,"results":"50","hashOfConfig":"38"},{"size":1711,"mtime":1612150614283,"results":"51","hashOfConfig":"38"},{"size":1691,"mtime":1612141077085,"results":"52","hashOfConfig":"38"},{"size":1432,"mtime":1612150623271,"results":"53","hashOfConfig":"38"},{"size":2271,"mtime":1612141090951,"results":"54","hashOfConfig":"38"},{"size":1412,"mtime":1612141033171,"results":"55","hashOfConfig":"38"},{"size":3538,"mtime":1612150573024,"results":"56","hashOfConfig":"38"},{"size":9146,"mtime":1612492770452,"results":"57","hashOfConfig":"38"},{"size":280,"mtime":1611015018905,"results":"58","hashOfConfig":"38"},{"size":858,"mtime":1611802113420,"results":"59","hashOfConfig":"38"},{"size":3602,"mtime":1594446150546,"results":"60","hashOfConfig":"38"},{"size":4974,"mtime":1597653532993,"results":"61","hashOfConfig":"38"},{"size":4185,"mtime":1597653532993,"results":"62","hashOfConfig":"38"},{"size":3602,"mtime":1595637219867,"results":"63","hashOfConfig":"38"},{"size":1742,"mtime":1611015018910,"results":"64","hashOfConfig":"38"},{"size":6059,"mtime":1611015018912,"results":"65","hashOfConfig":"38"},{"size":2101,"mtime":1611802113418,"results":"66","hashOfConfig":"38"},{"size":3308,"mtime":1612150589486,"results":"67","hashOfConfig":"38"},{"size":1480,"mtime":1612483668929,"results":"68","hashOfConfig":"38"},{"size":2216,"mtime":1597653532991,"results":"69","hashOfConfig":"38"},{"size":2660,"mtime":1595082812373,"results":"70","hashOfConfig":"38"},{"size":966,"mtime":1611015018911,"results":"71","hashOfConfig":"38"},{"size":1771,"mtime":1593861889925,"results":"72","hashOfConfig":"38"},{"size":1827,"mtime":1596883568436,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"enk2l9",{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/app/src/index.tsx",[],["151","152","153"],"/app/src/serviceWorker.ts",["154","155"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/app/src/pages/HomePage/HomePage.tsx",["156","157"],"import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport { QueryRenderer } from \"react-relay\";\nimport { graphql } from \"babel-plugin-relay/macro\";\nimport environment from \"../../environment\";\nimport { Provider as BumbagProvider, PageWithHeader } from \"bumbag\";\nimport CategoryList from \"../../components/CategoryList/CategoryList\";\nimport Footer from \"./components/Footer\";\nimport { newTheme } from \"../../theme\";\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\nimport { ContentList } from \"../../components/ContentList/ContentList\";\nimport { ProductsPage } from \"../ProductsPage/ProductsPage\";\nimport SingleProductPage from \"../SingleProductPage/SingleProductPage\";\nimport SearchResultsPage from \"../SearchResultsPage/SearchResultsPage\";\nimport CartPage from \"../CartPage/CartPage\";\nimport QuotePage from \"../QuotePage/QuotePage\";\nimport Main from \"./components/Main\";\nimport Nav from \"../../components/Nav/Nav\";\nimport HomePageContext from \"./HomePageContext\";\nimport { CartItemProps } from \"./HomePageContext\";\nimport ScrollToTop from \"../ScrollToTop\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { certificationLinks } from \"./certificationLinks\";\nimport CategoryGrid from \"../../components/CategoryGrid/CategoryGrid\";\n\nconst HomePage: React.FunctionComponent = (): JSX.Element => {\n  const [cart, setCart] = useState<CartItemProps[]>([]);\n  const location = useLocation();\n  const isHomePage = location.pathname === \"/\";\n  const isQuotePage = location.pathname === \"/enviar-cotizacion\";\n  const isContactoPage = location.pathname === \"/contacto\";\n\n  useEffect(() => {\n    const stringifyCart = sessionStorage.getItem(\"cart\");\n    const parsedCart = JSON.parse(stringifyCart || \"[]\");\n    setCart(parsedCart);\n  }, []);\n\n  useEffect(() => {\n    sessionStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  type ProductItemUpdateProps = {\n    productId: string;\n    quantity: number;\n  };\n  const updateCartItem = ({ productId, quantity }: ProductItemUpdateProps) => {\n    if (isNaN(quantity) || quantity < 1) {\n      return;\n    }\n    const newCart = cart.map((item: CartItemProps) => {\n      return item.productId === productId ? { ...item, quantity } : item;\n    });\n    setCart(newCart);\n  };\n\n  const addCartItem = ({\n    productId,\n    productName,\n    productImage,\n    quantity,\n  }: CartItemProps) => {\n    if (cart.some((item: CartItemProps) => item.productId === productId)) {\n      const newCart = cart.map((item: CartItemProps) => {\n        return item.productId === productId\n          ? { ...item, quantity: item.quantity + 1 }\n          : item;\n      });\n      setCart(newCart);\n    } else {\n      setCart([...cart, { productId, productName, productImage, quantity }]);\n    }\n  };\n\n  const incrementCartItem = ({ productId }: { productId: string }) => {\n    //TODO: should we need a max number here??\n    const newCart = cart.map((item: CartItemProps) =>\n      item.productId === productId\n        ? { ...item, quantity: item.quantity + 1 }\n        : item\n    );\n    setCart(newCart);\n  };\n\n  const decrementCartItem = ({ productId }: { productId: string }) => {\n    const item = cart.find(\n      (item: CartItemProps) => item.productId === productId\n    );\n    if (item && item.quantity === 0) {\n      return;\n    }\n    const newCart = cart.map((item: CartItemProps) =>\n      item.productId === productId\n        ? { ...item, quantity: item.quantity - 1 }\n        : item\n    );\n    setCart(newCart);\n  };\n\n  const sumCartItems = (cart: CartItemProps[]): number => {\n    const sum = cart.reduce((acc, curr, index, src) => {\n      return acc + Number(curr.quantity);\n    }, 0);\n    return sum;\n  };\n\n  const removeCartItem = (productId: string) => {\n    const filteredCard = cart.filter(\n      (item: any) => item.productId !== productId\n    );\n    setCart(filteredCard);\n  };\n\n  return (\n    <ScrollToTop>\n      <BumbagProvider theme={newTheme}>\n        <QueryRenderer\n          environment={environment}\n          query={graphql`\n            query HomePageQuery {\n              fetchCategories {\n                ...CategoryList_categories\n                ...CategoryGrid_categoryGridItems\n              }\n            }\n          `}\n          variables={{}}\n          render={({ error, props }: { error: any; props: any }) => {\n            if (error) {\n              console.error(\"error: \", error);\n              return <div>Error!</div>;\n            }\n            if (!props) {\n              return <Loader />;\n            }\n\n            return (\n              <HomePageContext.Provider\n                value={{\n                  cart,\n                  cartCount: sumCartItems(cart),\n                  updateCartItem,\n                  addCartItem,\n                  handleCart: setCart,\n                  incrementCartItem,\n                  decrementCartItem,\n                  removeCartItem,\n                }}\n              >\n                <PageWithHeader header={<Nav />} border=\"default\">\n                  <div style={{ display: \"flex\" }}>\n                    {!isHomePage && (\n                      <aside style={{ flexBasis: \"20%\", paddingTop: \"2rem\" }}>\n                        <CategoryList categories={props.fetchCategories} />\n                      </aside>\n                    )}\n                    <main style={{ flexBasis: \"80%\", margin: \"0 auto\" }}>\n                      <Switch>\n                        <Route path=\"/contacto\">\n                          <ContactForm\n                            initialValues={{\n                              nombre: \"\",\n                              empresa: \"\",\n                              email: \"\",\n                              mensaje: \"\",\n                              telefono: \"\",\n                              recaptcha: \"\",\n                            }}\n                          />\n                        </Route>\n                        <Route path=\"/certificaciones\">\n                          <ContentList\n                            title=\"Certificaciones\"\n                            description=\"Descargue documentos que certifican la calidad de nuestos productos.\"\n                            links={certificationLinks}\n                          />\n                        </Route>\n                        <Route path=\"/cotizacion\">\n                          <CartPage />\n                        </Route>\n                        <Route path=\"/enviar-cotizacion\">\n                          <QuotePage />\n                        </Route>\n                        <Route path=\"/categoria/:categoryId\">\n                          <ProductsPage />\n                        </Route>\n                        <Route path=\"/resultados/:searchTerm\">\n                          <SearchResultsPage />\n                        </Route>\n                        <Route path=\"/producto/:productId\">\n                          <SingleProductPage />\n                        </Route>\n                        <Route path=\"/\">\n                          <Main>\n                            <CategoryGrid\n                              categoryGridItems={props.fetchCategories}\n                            />\n                          </Main>\n                        </Route>\n                      </Switch>\n                    </main>\n                  </div>\n                </PageWithHeader>\n                <Footer />\n              </HomePageContext.Provider>\n            );\n          }}\n        />\n      </BumbagProvider>\n    </ScrollToTop>\n  );\n};\nexport default HomePage;\n","/app/src/environment.js",[],"/app/src/components/CategoryGrid/CategoryGrid.tsx",[],"/app/src/components/CategoryList/CategoryList.tsx",[],"/app/src/pages/HomePage/HomePageContext.ts",["158"],"import { createContext, useContext } from \"react\";\n\nexport type CartItemProps = {\n  productId: string;\n  productName: string;\n  productImage: string;\n  quantity: number;\n};\n\ntype ProductItemProps = {\n  productId: string;\n  productName: string;\n  productImage: string;\n  quantity: number;\n};\n\ntype ProductItemUpdateProps = {\n  productId: string;\n  quantity: number;\n};\n\ninterface HomePageContextProps {\n  cart: ProductItemProps[];\n  cartCount: number;\n  handleCart: (cart: CartItemProps[]) => void;\n  updateCartItem: (item: ProductItemUpdateProps) => void;\n  addCartItem: (item: ProductItemProps) => void;\n  incrementCartItem: (item: { productId: string }) => void;\n  decrementCartItem: (item: { productId: string }) => void;\n  removeCartItem: (productId: string) => void;\n}\n\n// const HomePageContext = createContext<Partial<HomePageContextProps>>({});\nconst HomePageContext = createContext({} as HomePageContextProps);\n\nexport const useHomePageContext = () => useContext(HomePageContext);\n\nexport default HomePageContext;\n","/app/src/theme.ts",[],"/app/src/pages/HomePage/__generated__/HomePageQuery.graphql.ts",[],"/app/src/pages/ScrollToTop.tsx",["159","160"],"import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ScrollToTop = ({ children }: any) => {\n  const { pathname } = useLocation();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return children;\n};\n\nexport default ScrollToTop;\n","/app/src/pages/HomePage/certificationLinks.tsx",[],"/app/src/pages/HomePage/components/Main.tsx",[],"/app/src/pages/HomePage/components/Footer.tsx",[],"/app/src/pages/CartPage/CartPage.tsx",[],"/app/src/pages/SearchResultsPage/SearchResultsPage.tsx",[],"/app/src/pages/QuotePage/QuotePage.tsx",[],"/app/src/pages/SingleProductPage/SingleProductPage.tsx",[],"/app/src/pages/ProductsPage/ProductsPage.tsx",[],"/app/src/components/Nav/Nav.tsx",[],"/app/src/components/ContactForm/ContactForm.tsx",[],"/app/src/components/Loader/Loader.tsx",[],"/app/src/components/ContentList/ContentList.tsx",[],"/app/src/pages/SingleProductPage/__generated__/SingleProductPageQuery.graphql.ts",[],"/app/src/pages/ProductsPage/__generated__/ProductsPageQuery.graphql.ts",[],"/app/src/pages/SearchResultsPage/__generated__/SearchResultsPageQuery.graphql.ts",[],"/app/src/components/ContactForm/__generated__/ContactFormQuery.graphql.ts",[],"/app/src/components/ProductList/ProductList.tsx",[],"/app/src/components/QuoteForm/QuoteForm.tsx",[],"/app/src/components/CartTable/CartTable.tsx",[],"/app/src/components/ProductCard/ProductCard.tsx",[],"/app/src/components/ReCaptcha/ReCaptcha.tsx",[],"/app/src/components/ProductList/__generated__/ProductList_products.graphql.ts",[],"/app/src/components/QuoteForm/__generated__/QuoteFormQuery.graphql.ts",[],"/app/src/components/QuantityPicker/QuantityPicker.tsx",[],"/app/src/components/CategoryList/__generated__/CategoryList_categories.graphql.ts",[],"/app/src/components/CategoryGrid/__generated__/CategoryGrid_categoryGridItems.graphql.ts",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":28,"column":8,"nodeType":"169","messageId":"170","endLine":28,"endColumn":42},{"ruleId":"167","severity":1,"message":"168","line":136,"column":8,"nodeType":"169","messageId":"170","endLine":136,"endColumn":29},{"ruleId":"171","severity":1,"message":"172","line":30,"column":9,"nodeType":"173","messageId":"174","endLine":30,"endColumn":20},{"ruleId":"171","severity":1,"message":"175","line":31,"column":9,"nodeType":"173","messageId":"174","endLine":31,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":36,"column":35,"nodeType":"176","messageId":"170","endLine":36,"endColumn":40},{"ruleId":"167","severity":1,"message":"168","line":4,"column":21,"nodeType":"176","messageId":"170","endLine":4,"endColumn":43},{"ruleId":"167","severity":1,"message":"177","line":4,"column":22,"nodeType":"178","messageId":"179","endLine":4,"endColumn":39},"jsx-a11y/accessible-emoji",[],"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","@typescript-eslint/no-unused-vars","'isQuotePage' is assigned a value but never used.","Identifier","unusedVar","'isContactoPage' is assigned a value but never used.","ArrowFunctionExpression","Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed","no-global-assign","no-unsafe-negation"]